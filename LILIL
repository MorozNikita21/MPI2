#include <iostream>
#include <fstream>
#include <mpi.h>

int count_positives(const std::string& filename) {
    std::ifstream input(filename); // открывается файл
    int count = 0;
    double x;
    while (input >> x) {
        if (x > 0) {
            count++;
        }
    }
    input.close(); // закрывается файл
    return count;
}

int main(int argc, char** argv) {
    MPI_Init(&argc, &argv);
    int rank, size;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank); // номер процесса
    MPI_Comm_size(MPI_COMM_WORLD, &size); // кол-во процессов
    const int n = argc - 1; // кол-во файлов
    if (size != n) {
        std::cerr << "Требуется " << n << " процесса(ов)" << std::endl;
        MPI_Finalize();
        return 1;
    }
    int result = 0;
    if (rank < n) {
        result += count_positives(argv[rank + 1]); // кол-во + элементов
    }
    MPI_Reduce(&result, &result, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD); // сумма результатов
    if (rank == 0) {
        std::ofstream output("result.txt"); // открытие вых файла на 0 процессе
        output << result << std::endl; // запись результата в выходной файл
        output.close(); // закрытие вых файла
    }
    MPI_Finalize();
    return 0;
}
